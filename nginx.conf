# vim:ft=nginx

user 				nobody;
worker_processes 	auto;
daemon 				off;
pid					/var/run/nginx.pid;
error_log 			/var/log/nginx/nginx-error.log warn;

events {
	worker_connections 1024;
}

http {
	default_type	application/octet-stream;
	charset			utf-8;

	# Don't expose nginx version through headers
	server_tokens	off;

	include 	mime.types;

	# Enables the use of sendfile(2) to copy data in kernel-space
	# instead of using read(2) and write(2) in user space.
	sendfile on;

	# Wait for the packet size to reach the MSS before sending.
	# This leads to increased throughput. tcp_nopush is turned off
	# when the remaining data is less than the MSS
	tcp_nopush on;

	# .. So that tcp_nodelay takes over and the last packet is sent
	# immediately despite not having reached the MSS
	tcp_nodelay on;

	# The number of requests a client can make over a
	# single keepalive connection
	keepalive_requests 128;

	# How long an idle keepalive connection remains open
	keepalive_timeout 65;

	# The time nginx will wait for the client to send the request
	# body after the request is received.
	client_body_timeout 10;

	# The time nginx will wait for the client to send the request
	# header after the request is received
	client_header_timeout 10;

	# The time nginx will wait for the client between
	# read operations
	send_timeout 10;

	# The size of the buffer holding the body-part
	# of the requests received from the client (the POST-data)
	client_body_buffer_size 128k;

	# The max size for a client request (Note: file upload limit)
	client_max_body_size 64m;

	# The size of the buffer holding the headers
	# received from the client.
	client_header_buffer_size 1k;

	# Needs explanation
	large_client_header_buffers	8 10k;
	output_buffers 1 32k;
	postpone_output 1460;
	open_file_cache	max=1000 inactive=20s;
	open_file_cache_valid 30s;
	open_file_cache_min_uses 3;
	open_file_cache_errors off;

	include nginx-gzip.conf;
	include nginx-logging.conf;
	include nginx-tls.conf;

	# Exposes nginx stats on 127.0.0.1:80/nginx_status
	# Used by nginx-amplify
	server {
		listen 127.0.0.1:80;
		server_name 127.0.0.1;
		location /nginx_status {
			stub_status;
			allow 127.0.0.1;
			deny all;
		}
	}

	# Enable sites by creating symlinks in sites-enabled
	include sites-enabled/*.conf;
}
